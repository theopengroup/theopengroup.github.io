<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>theopengroup</title>
  <icon>https://www.gravatar.com/avatar/54f28b064b7330c5461867f7d99c71a5</icon>
  <subtitle>a coder likes reading papers</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://theopengroup.github.io/"/>
  <updated>2018-07-13T15:59:11.518Z</updated>
  <id>http://theopengroup.github.io/</id>
  
  <author>
    <name>huangjhsx</name>
    <email>huangjhsx@foxmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Jar包冲突治理</title>
    <link href="http://theopengroup.github.io/2017/06/05/jar-conflict/"/>
    <id>http://theopengroup.github.io/2017/06/05/jar-conflict/</id>
    <published>2017-06-05T12:56:34.000Z</published>
    <updated>2018-07-13T15:59:11.518Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>近来，多个项目出现上线后Jar包冲突导致上线失败回滚情况，而在开发、测试过程中都没有提前发现，因此需要提出一种简单、可靠的方案来规避这种情况。</p></blockquote><a id="more"></a><h2 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h2><p>错误日志出现nested exception is Java.lang.NoSuchMethodError</p><h2 id="问题排查"><a href="#问题排查" class="headerlink" title="问题排查"></a>问题排查</h2><p>在程序启动的脚本中加入JVM启动参数 -verbose:class，然后重启应用。在启动日志中可以看到加载的类来自哪个包。</p><p>例如：[Loaded org.apache.velocity.runtime.parser.node.ASTTrue from file:/home/admin/app/.default/deploy/app.war/WEB-INF/lib/velocity-1.6.4.jar]</p><p>如果在启动日志中没有发现加载冲突的类，执行触发异常的操作，这时就有加载类的信息了。最后，查看加载的类所在的包，与正确的包比较。</p><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>Jar包冲突主要包括以下两类：</p><p>1、相同Jar包不同版本导致冲突</p><blockquote><p>Maven管理依赖遵循两条原则，最短路径优先原则和首先声明原则。假设 A-&gt;B-&gt;C-&gt;D1, E-&gt;F-&gt;D2, G-&gt;H-&gt;D3，其中D1,D2,D3分别为D的不同版本。如果pom.xml文件中引入了A、E和G之后，先按最短路径优先原则保留D2和D3，再按首先声明原则，最终保留D2。如果此时开发期望的是D1，而D1和D2在接口实现上有所差别，则会出现不符合预期的问题。</p><p>由于规则是固定的，线下环境可以复现线上问题，然而如果测试点覆盖的地方恰好没有调用到D，则上线后会出现失败。</p></blockquote><p>2、相同ClassPath下的同名类出现在不同Jar包中</p><blockquote><p>Classloader查找class文件的过程取决于文件系统返回的顺序（linux文件系统inode的顺序）。如果相同ClassPath下的同名类出现在不同Jar包，一旦Classloader先加载的文件不是我们期望的，则基本一定会发生异常。</p><p>由于文件系统返回文件的顺序在线上、线下环境很可能不一样（操作系统、文件系统、JVM等因素），因此线下很难发现问题，只有到线上排查，为时已晚。</p></blockquote><h2 id="解决方案"><a href="#解决方案" class="headerlink" title="解决方案"></a>解决方案</h2><p>1、在pom中增加冲突检测插件，在build阶段发现问题，消灭问题。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-enforcer-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>enforce<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rules</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencyConvergence</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">rules</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goal</span>&gt;</span>enforce<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">id</span>&gt;</span>enforce-ban-duplicate-classes<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">goal</span>&gt;</span>enforce<span class="tag">&lt;/<span class="name">goal</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">goals</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">rules</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">banDuplicateClasses</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ignoreClasses</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ignoreClass</span>&gt;</span>javax.*<span class="tag">&lt;/<span class="name">ignoreClass</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ignoreClass</span>&gt;</span>org.junit.*<span class="tag">&lt;/<span class="name">ignoreClass</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ignoreClasses</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">findAllDuplicates</span>&gt;</span>true<span class="tag">&lt;/<span class="name">findAllDuplicates</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">banDuplicateClasses</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">rules</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">fail</span>&gt;</span>true<span class="tag">&lt;/<span class="name">fail</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">execution</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">executions</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.codehaus.mojo<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>extra-enforcer-rules<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>1.0-beta-6<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br></pre></td></tr></table></figure><p>2、优雅管理依赖版本对于 A-&gt;B-&gt;C-&gt;D1, E-&gt;F-&gt;D2, G-&gt;H-&gt;D3，其中D1,D2,D3分别为D的不同版本这种情况，通常的做法是用exclusion标签排除不需要的jar包，然而这种做法的后果是每次引入新的jar包都可能传递依赖到导致冲突的jar包，虽然冲突检测插件可以检测出，但需要开发者逐一排除，非常麻烦。</p><p>推荐的做法是在parent pom文件中通过dependencyManagement来进行版本管理，一劳永逸。例如，如果开发时确定使用poi 3.9版本，则配置如下：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.poi<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>poi<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">version</span>&gt;</span>$&#123;poi.version&#125;<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencyManagement</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">properties</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">poi.version</span>&gt;</span>3.9<span class="tag">&lt;/<span class="name">poi.version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">properties</span>&gt;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;近来，多个项目出现上线后Jar包冲突导致上线失败回滚情况，而在开发、测试过程中都没有提前发现，因此需要提出一种简单、可靠的方案来规避这种情况。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="java" scheme="http://theopengroup.github.io/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>分布式追踪系统行业对比</title>
    <link href="http://theopengroup.github.io/2017/01/15/distributed-tracer/"/>
    <id>http://theopengroup.github.io/2017/01/15/distributed-tracer/</id>
    <published>2017-01-15T14:23:11.000Z</published>
    <updated>2018-07-13T15:59:11.518Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>分布式追踪系统在微服务架构中有着非常重要的地位。</p></blockquote><a id="more"></a><h2 id="ZipKin"><a href="#ZipKin" class="headerlink" title="ZipKin"></a>ZipKin</h2><p>Zipkin是由Twitter 公司开发贡献的开源的分布式实时数据追踪系统，应用较为广泛。与之配合使用的另一个重要开源组件是Brave，提供了面向 Standard Servlet、Spring MVC、Http Client、JAXRS、Jersey、Resteasy 和 MySQL 等接口的跟踪信息埋点，可以通过编写简单的配置和代码，让基于这些框架构建的应用可以向 Zipkin报告数据。</p><p>Zipkin目前只是展示调用链，并没有做进一步的统计分析，功能相对比较原生，其优势在于通用性强，积极跟进OpenTracing的标准，可以与spring cloud方便地集成。</p><h2 id="鹰眼"><a href="#鹰眼" class="headerlink" title="鹰眼"></a>鹰眼</h2><p>鹰眼是由淘宝于2013年上线的分布式跟踪系统，是目前业内功能最完善的跟踪系统，不仅接入了大部分中间件（前端请求接入，分布式session，远程服务框架，异步消息通讯, 分库分表，分布式缓存，分布式文件系统等等），也提供了路由分布、QPS、调用次数、服务依赖度、平均耗时等统计分析功能，为后续的系统优化提供参考。</p><p><img src="http://7xnvrl.com1.z0.glb.clouddn.com/yingyan.png" alt="图1"><br><img src="http://7xnvrl.com1.z0.glb.clouddn.com/yingyan2.png" alt="图2"></p><p>目前，国内其它公司的跟踪系统如下（超链接是对应的详细介绍）：</p><blockquote><p>京东的Hydra：与dubbo框架集成，开源，不维护；</p><p>唯品会的<a href="http://weibo.com/ttarticle/p/show?id=2309404006474413149166" target="_blank" rel="noopener">Microscope</a>：规划合理的一整套监控方案；</p><p>窝窝网的<a href="http://zhengyun-ustc.iteye.com/blog/2167052" target="_blank" rel="noopener">Tracing</a>：系统中文名也叫鹰眼；</p><p>新浪的<a href="http://www.infoq.com/cn/articles/weibo-watchman" target="_blank" rel="noopener">Watchman</a>：无特色；</p><p>美团的<a href="http://tech.meituan.com/mt-mtrace.html" target="_blank" rel="noopener">MTrace</a>：功能比较完善，未来有望开源；</p><p>点评的<a href="http://tech.meituan.com/CAT_in_Depth_Java_Application_Monitoring.html" target="_blank" rel="noopener">Cat</a>：参考eBay的CAL，部分开源，几乎不维护；</p></blockquote><p>它们技术上各有千秋，功能上都没有做更多的创新。我们的跟踪系统在统计分析的功能上也有在借鉴鹰眼，但目前统计分析功能的利用率不高，个人觉得需要根据统计的结果推进服务质量的提升，才能提高统计功能的利用率。</p><h2 id="SKY-WALKING"><a href="#SKY-WALKING" class="headerlink" title="SKY-WALKING"></a>SKY-WALKING</h2><p>SKY-WALKING是一个由国人开发者开源的全链路监控追踪系统，目前维护较为活跃，支持很不错，点赞！他也是积极参与了opentracing标准的制定，文档翻译地址，也看到他推进其它开源组件遵从这个标准。下图是weibo开源的motan rpc框架。<br><img src="http://7xnvrl.com1.z0.glb.clouddn.com/skywalking.png" alt="图3"></p><p>下图是sky-walking的进展情况，可借鉴有意义的功能是“邮件报警”以及“通过log4j扩展在日志中快速展现trace id”。</p><p>目前我们的跟踪系统使用率较低，通过跟踪系统的调用链只能看到来源、去向和时间等信息，如果想进一步调试问题，需要去翻日志，如果此时日志里带有traceid，可以更快地把相关日志都找到。<br><img src="http://7xnvrl.com1.z0.glb.clouddn.com/skywalking2.png" alt="图4"></p><p>同样，目前只有在服务向调用者抛异常时，邮件报警的日志内容会带有trace id，在业务中打的error日志并没有trace id，因此也降低了跟踪系统的使用率。下图是sky-walking的报警截图。<br><img src="http://7xnvrl.com1.z0.glb.clouddn.com/skywalking3.png" alt="图5"></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;分布式追踪系统在微服务架构中有着非常重要的地位。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="java" scheme="http://theopengroup.github.io/categories/java/"/>
    
    
  </entry>
  
  <entry>
    <title>2016个人总结</title>
    <link href="http://theopengroup.github.io/2016/12/30/2016-conclusion/"/>
    <id>http://theopengroup.github.io/2016/12/30/2016-conclusion/</id>
    <published>2016-12-30T14:11:07.000Z</published>
    <updated>2018-07-13T15:59:11.518Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>2016年即将过去，新的一年马上到来。此时是回忆过去，总结过去的好时机，来吧，给自己打个公正的分数。</p></blockquote><a id="more"></a><h2 id="最有成就的事"><a href="#最有成就的事" class="headerlink" title="最有成就的事"></a>最有成就的事</h2><p>今年最有成就的事莫过于那篇亮闪闪的b类会议论文。</p><p>一月份产生idea，果断放弃公司组织的滑雪活动，每天早上上班前跑实验，下班回来分析结果，花费两个周末写论文，short paper，搞定提交！存储界顶会msst 2016！</p><p>三月份出结果，conditional accepted，已经是出乎意料了，被安排了个导师，协助论文的修改。恰巧清明节三天假期，给了我充足的时间去修改论文，而且Peter老师的细致指导（整整十多页的意见），有节奏地指导（先大改整体，再深挖细节），专业地指导（比我还懂自己的论文，提炼到位），都让我佩服不已，这个有来有回的修改过程使得这篇文章自然地从普通到棒棒哒！当然，跟妹纸一起修改论文，也一点不累，充实的假期！</p><p>四月份跟妹纸一起办美国签证，so easy！五月份，去了旧金山游玩，在santa clara大学做了口头报告，见了几位在google，facebook，yahoo工作的同学，这个过程现在回想起来还是美滋滋的。欣赏了异国风光，感受了报告时的紧张气氛（毕竟顶会啊），也享受了一番顶级互联网公司的福利，啧啧啧。。。</p><h2 id="最意外的惊喜"><a href="#最意外的惊喜" class="headerlink" title="最意外的惊喜"></a>最意外的惊喜</h2><p>今年最意外的惊喜莫过于第二季度老大给的绩效A。</p><p>第二季度自己作为负责人做了一个挺小的项目，表现也不是很满意，连续性加班也让自己很困扰，没想到项目产生的效果还不错，老大因此给了我一个亮闪闪的A，绝对的惊喜，也是绝对的激励！</p><h2 id="最难忘的经历"><a href="#最难忘的经历" class="headerlink" title="最难忘的经历"></a>最难忘的经历</h2><p>黑马大赛无疑！不多说，见上一篇博客！</p><h2 id="最逗逼的事"><a href="#最逗逼的事" class="headerlink" title="最逗逼的事"></a>最逗逼的事</h2><p>等了一年的新款macbook pro竟然将价钱提高了五千，我表示不能接受啊，不能接受！但是为了那优雅的设计，那通过unix03标准认证的macos，我忍。。。</p><p>我是黄牛。黑五两台thinkpad低价美亚入手，现在卖了一台，预计两台能赚个3000吧。。。另外，从闲鱼入手15寸低配，只要15k，比官网足足低了3000多，这样算起来，哈哈，强行补血。</p><h2 id="2017展望"><a href="#2017展望" class="headerlink" title="2017展望"></a>2017展望</h2><p>等待妹纸归来，等待升职加薪，另外，博客不能断！</p><div align="center"><br><img src="http://7xnvrl.com1.z0.glb.clouddn.com/stanford-1.jpg" width="350" height="450" alt="斯坦福大学"><br></div>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;2016年即将过去，新的一年马上到来。此时是回忆过去，总结过去的好时机，来吧，给自己打个公正的分数。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="experience" scheme="http://theopengroup.github.io/categories/experience/"/>
    
    
  </entry>
  
  <entry>
    <title>体验持续集成</title>
    <link href="http://theopengroup.github.io/2016/12/17/ci-experience/"/>
    <id>http://theopengroup.github.io/2016/12/17/ci-experience/</id>
    <published>2016-12-17T05:42:54.000Z</published>
    <updated>2018-07-13T15:59:11.518Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>It’s the first time I tried ci for my blog, a great experience!</p></blockquote><a id="more"></a>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;It’s the first time I tried ci for my blog, a great experience!&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="experience" scheme="http://theopengroup.github.io/categories/experience/"/>
    
    
  </entry>
  
  <entry>
    <title>痛并快乐的搜狗AI黑客马拉松之旅</title>
    <link href="http://theopengroup.github.io/2016/12/06/hackathon/"/>
    <id>http://theopengroup.github.io/2016/12/06/hackathon/</id>
    <published>2016-12-06T14:55:36.000Z</published>
    <updated>2018-07-13T15:59:11.518Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>有一种比赛能让你着迷，不管是打酱油，还是亲力亲为，在决胜时刻，总能感受到团结的强大，那就是搜狗黑客马拉松。</p></blockquote><a id="more"></a><h2 id="引子"><a href="#引子" class="headerlink" title="引子"></a>引子</h2><p>身披第二届黑马两项大奖（第三名+90后最喜爱）的光环和荣耀，我对第三届搜狗黑客马拉松充满向往，报名开启第一天便率先占坑。上一届，得益于熊总在创意、技术和语言文字组织上全方位的强大，自己既享受了划水时的轻松，也经历了答辩演讲的压力，更享受了团队欢庆的一刻。这一次，我成为了“大当家”，重新感受黑马。</p><p>偶像的黑马之旅分享<a href="http://veryyoung.me/blog/2016/02/01/sogou-hackathon.html" target="_blank" rel="noopener">在这里</a>，我extend他，对比过往的经历说说本次比赛的感受。</p><h2 id="漫长的组队"><a href="#漫长的组队" class="headerlink" title="漫长的组队"></a>漫长的组队</h2><p>上一届我们小鲜肉6人刚好满足比赛人数的上限，组队只花1秒钟。今年的组队显得困难许多，有意愿的人数超过上限，却没有人有勇气分成两个队，僵持…僵持…，好吧，一周后队伍终于稳定。</p><h2 id="兴奋-漫长的创意生成"><a href="#兴奋-漫长的创意生成" class="headerlink" title="兴奋+漫长的创意生成"></a>兴奋+漫长的创意生成</h2><p>我从来不怀疑自己在创意上的能力，纵使这次主题限定为陌生的人工智能，我也不畏惧，立马开启调研模式。自动生成视频字幕（youtube已实现）、智能视频广告（唉，本届比赛第二名）、智能垃圾分类、英文陪练… idea不断在产生和否定间循环，老大也组织全组人一起聚餐帮忙头脑风暴，无果，时间又过去4天。</p><p>距离比赛还有十天，我们团队6人第一次坐下来思考，第一次想出了全队兴奋的idea，图个楽，以图生成音乐，任务分工一气呵成。然而，经过周五、周日的开发，项目的问题逐渐暴露，没有评价指标、没有解决痛点、没有达到预期，我有点失落。</p><p>距离比赛仅剩四天，我们再一次坐下来重新思考。我分享了CVPR2015的一篇图片转自然语言的文章，希望能从这个高端的技术中找到灵感。正常人一看到图片就能想到对应的描述，这技术有什么用？咦？如果这人看不到呢，如果是盲人呢。我又一次心中佩服了一下自己，全队第二次兴奋，确定新的idea，盲人听相。尽管之后又陷入过调研、纠结和争论的状态，最后还是确定了下来。(ps. 对比上届，报名当天就已确定主题，第二天就生成调研报告并讨论将要开展的工作)</p><p>总结一下经验：idea一定要一起坐下来想，否则大多数人一开始会下意识地抵触否定别人的想法。</p><h2 id="比赛"><a href="#比赛" class="headerlink" title="比赛"></a>比赛</h2><p>我们将“盲人听相”映射成了三类人，视觉有障碍的盲人，忙于看手机的低头族，看不懂世界的儿童。</p><p>1、针对盲人，我们打算停留在PPT的表现上，不落地开发；</p><p>2、针对低头族，我决定基于微信进行文字和图像消息的语音播报，原理类似抢红包插件，使得我相信它的可行性；</p><p>3、针对儿童，我们打算开发一个看图说中英文的app，宝宝知乎，难度较低，以备不时之需。</p><p>这时候继续为熊总点个大大的赞，友情为我们把hack微信程序的架子搭好，陪我调试到凌晨4点；再给团队里唯一一位女生点赞，把程序中最关键的文字转语音问题调试正常，两天时间，没有放弃希望；最后鄙视自己一下，只做了几件小事，搞定演示环境、写好图片自动描述和翻译代码以及修改PPT。要是自己技术储备强一点，应该会有更多时间让我们最终的产品形态更加完善。</p><p>在我参与到PPT时，已经是答辩前一天的晚上，效果非常不好，思路混乱，内容单薄。这时候已经没有多少时间推翻重新写了，只能将重点放在产品介绍上，用产品原型工具绘制了两个app效果图，第二天在老大帮忙指导下强化了产品的面向人群、特色、使用场景和架构创新等内容，并决定着重介绍微信的智能播报功能，放弃针对儿童的宝宝知乎。(好怀念当年跟熊总一起搞PPT的时候，他的思路我点赞，我的想法他也同意，重要的是思考与行动并行，最终的效果是我俩都满意，无需折腾返工)</p><h2 id="答辩"><a href="#答辩" class="headerlink" title="答辩"></a>答辩</h2><p>我们将演讲的任务交给了能力最强的组员（雷哥），自己负责demo的演示，毕竟调试那么多次，要是有什么坑也更有把握。</p><p>初审：抽签后我们的顺序是最后一位，答辩过程出人意料的紧张，我在演示过程中手抖得厉害，多次打错字。虽然演示效果不错，但面对茹总“川总已在四月份一个活动中演示过图片转语音技术”的尴尬场景，我也吓傻，不知道如何反驳。走下台后，我几乎觉得比赛就此结束。出人意料的是，我们并列第三，而且由于茹总的力挺，我们意外地成为了44支队伍中的前16名，挺进决赛。我心中窃喜，又有一个机会让我重新证明。</p><p>决赛：这一次我调整了一下演示流程，往演示机器上发送文字图片的任务交给所有小伙伴，我只需在旁边解说，果然，这就是我要的感觉，我一点都没感觉到紧张。演示时的互动让现场高潮迭起，我多次想强调我们产品的特色时都被台下的吃瓜群众制止，整个过程我和小伙伴们觉得已经perfect了。</p><p>结果：比赛的最终结果并没有想象中那么满意，排名大概在第七位，看着现场的各种大奖，心中有些小小失落。自我总结一下，创意上应该没有任何问题，缺乏的是包装我们的成果，没有体现出技术上的难度。图片生成自然语言描述其实是一项非常先进的技术（微软提供了较为成熟的API，谷歌暂时还没有），它将图像识别技术和自然语言处理技术融合在一起，相比于OCR等成熟的技术，更加有难度，有挑战性。如果我们对它的原理足够了解，多一些理论描述，效果应该会不一样。</p><h2 id="收获"><a href="#收获" class="headerlink" title="收获"></a>收获</h2><p>黑马的魅力之一在于过程，从报名时的无知茫然，到一遍遍提出和否定idea，再到开发时的焦虑和惊喜交加，最后到PPT的修改完善，我们无时无刻不在进步，这一点必须为小伙伴们点赞！我享受这种感觉！</p><p>黑马的魅力之二就是团结，在比赛时你一定能感受到团队的力量，老大从陪产假中跑来和我们一起出谋划策，其它同事赶来为我们加油到晚上十一点；</p><p>黑马的魅力之三就是成长，当自己全身心地参与比赛，为结果负责，为团队负责时，自己就一定会获得成长，过程中所遇到诸多不顺心的事都会是下次改进的动力。回想去年我还批评了熊总的领导能力，结果今年自己做得更不好，这一点我必须调整自己的心态，并提高自己的能力。</p><p>最后献上本次demo的源码，<a href="https://github.com/veryyoung/WechatAutoSpeak" target="_blank" rel="noopener">github</a>, 希望下次拿到拉斯维加斯的头等舱机票！</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;有一种比赛能让你着迷，不管是打酱油，还是亲力亲为，在决胜时刻，总能感受到团结的强大，那就是搜狗黑客马拉松。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="experience" scheme="http://theopengroup.github.io/categories/experience/"/>
    
    
  </entry>
  
  <entry>
    <title>解决windows下phoenix查询出现的PhoenixIOException</title>
    <link href="http://theopengroup.github.io/2016/03/21/solve-PhoenixIOException-windows/"/>
    <id>http://theopengroup.github.io/2016/03/21/solve-PhoenixIOException-windows/</id>
    <published>2016-03-21T03:32:22.000Z</published>
    <updated>2018-07-13T15:59:11.518Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>问题描述：当hbase数据量较大时，在windows下用phoenix查询出现异常问题(org.apache.phoenix.exception.PhoenixIOException 系统找不到指定的路径)</p></blockquote><a id="more"></a><h2 id="问题分析"><a href="#问题分析" class="headerlink" title="问题分析"></a>问题分析</h2><p>当通过phoenix方式查询hbase数据时，hbase会通过多线程的方式并发查询结果，并由客户端进行合并。数据量增大会导致内存的需求增加，内存不足时会写入磁盘临时文件。<br>phoenix-core 4.6.0版本下磁盘的临时文件路径默认为/tmp目录，如下图所示，导致了在windows下找不到该目录，进而出现PhoenixIOException。</p><p><img src="http://7xnvrl.com1.z0.glb.clouddn.com/DEFAULT_SPOOL_DIRECTORY.png" alt="图1"></p><p><strong>在phoenix-core 4.7.0中已修复该问题，路径由java.io.tmpdir环境变量决定。</strong></p><p><img src="http://7xnvrl.com1.z0.glb.clouddn.com/phoenix-core4.7.0.png" alt="图2"></p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><p>1、（推荐策略）在resin或tomcat所处的盘符（分区）的根路径下创建tmp文件夹，或者暴力地在每个分区的根路径下创建tmp文件夹！</p><p>2、（中等推荐）增加JVM的-Xmx配置，或增加hbase-site.xml中的maxGlobalMemoryPercentage，减少spoolThresholdBytes。麻烦！有时候不一定奏效！</p><blockquote><p>Xmx设置的大小=50*spoolThresholdBytes(兆)/(maxGlobalMemoryPercentage/100) </p></blockquote><p>3、升级phoenix-core版本</p><p>4、用反射的方法修改QueryServicesOptions中的static final DEFAULT_SPOOL_DIRECTORY的值，傻子才会这么做！不可行！</p><h2 id="问题结论"><a href="#问题结论" class="headerlink" title="问题结论"></a>问题结论</h2><p>Linux爽！Windows Low！不服？找<a href="http://veryyoung.me/" target="_blank" rel="noopener">他</a>！</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;问题描述：当hbase数据量较大时，在windows下用phoenix查询出现异常问题(org.apache.phoenix.exception.PhoenixIOException 系统找不到指定的路径)&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="工作" scheme="http://theopengroup.github.io/categories/%E5%B7%A5%E4%BD%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>有用的SSD研究相关的主页</title>
    <link href="http://theopengroup.github.io/2016/02/05/ssd-homepage/"/>
    <id>http://theopengroup.github.io/2016/02/05/ssd-homepage/</id>
    <published>2016-02-05T04:56:34.000Z</published>
    <updated>2018-07-13T15:59:11.518Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>定期查看个人、实验室主页，可以追踪最新的论文、研究方向以及源码，提高科研效率。</p></blockquote><a id="more"></a><h2 id="重点关注源码"><a href="#重点关注源码" class="headerlink" title="重点关注源码"></a>重点关注源码</h2><table><thead><tr><th>Name</th><th style="text-align:center">About</th></tr></thead><tbody><tr><td><a href="http://www.cs.utoronto.ca/~tzwang/" target="_blank" rel="noopener">Tianzheng Wang</a></td><td style="text-align:center">多伦多大学PHD <a href="https://github.com/ermia-db" target="_blank" rel="noopener">github</a></td></tr><tr><td><a href="http://www.cs.technion.ac.il/~gala/" target="_blank" rel="noopener">Gala Yadgar</a></td><td style="text-align:center">SSDPlayer源码 <a href="https://github.com/shroman3" target="_blank" rel="noopener">github</a></td></tr><tr><td><a href="https://github.com/zdvresearch" target="_blank" rel="noopener">zdvresearch</a></td><td style="text-align:center">MSST 2015 “Improving MLC flash performance and endurance with Extended P/E cycles” 的FTL源码</td></tr><tr><td><a href="http://www.ece.cmu.edu/~safari/pubs.html" target="_blank" rel="noopener">SAFARI GROUP</a></td><td style="text-align:center">…</td></tr><tr><td><a href="http://www.ssrc.ucsc.edu/pubs/rev_pub_date.html" target="_blank" rel="noopener">ssrc</a></td><td style="text-align:center">…</td></tr><tr><td><a href="http://nvsl.ucsd.edu/index.php?path=pubs" target="_blank" rel="noopener">nvsl</a></td><td style="text-align:center">NOVA <a href="https://github.com/NVSL/NOVA" target="_blank" rel="noopener">github</a></td></tr><tr><td><a href="http://research.cs.wisc.edu/adsl/Publications/" target="_blank" rel="noopener">adsl</a></td><td style="text-align:center">I know Suli Yang</td></tr><tr><td><a href="https://sites.google.com/site/thiagomanel/" target="_blank" rel="noopener">Thiago</a></td><td style="text-align:center"><a href="https://github.com/thiagomanel?tab=repositories" target="_blank" rel="noopener">github</a></td></tr><tr><td><a href="http://www.cs.toronto.edu/~gamvrosi/" target="_blank" rel="noopener">George</a></td><td style="text-align:center">Opportunistic Storage Maintenance <a href="https://github.com/gamvrosi/duet" target="_blank" rel="noopener">github</a></td></tr><tr><td><a href="http://www.itu.dk/people/phbo/#research" target="_blank" rel="noopener">Philippe</a></td><td style="text-align:center"><a href="http://nivdayan.github.io/" target="_blank" rel="noopener">nivdavan</a> <a href="https://github.com/nivdayan" target="_blank" rel="noopener">github1</a> <a href="https://github.com/ClydeProjects" target="_blank" rel="noopener">github2</a></td></tr><tr><td><a href="http://www.cse.cuhk.edu.hk/~pclee/www/index.html" target="_blank" rel="noopener">Patrick P. C. Lee</a></td><td style="text-align:center">many!</td></tr><tr><td><a href="http://ucare.cs.uchicago.edu/" target="_blank" rel="noopener">Ucare</a></td><td style="text-align:center"><a href="http://ucare.cs.uchicago.edu/projects/" target="_blank" rel="noopener">projects</a> <a href="https://github.com/ucare-uchicago" target="_blank" rel="noopener">github</a> flash emulator</td></tr><tr><td><a href="http://www.oscar.cs.stonybrook.edu/papers.php" target="_blank" rel="noopener">Oscar</a></td><td style="text-align:center"><a href="http://www.betrfs.org/" target="_blank" rel="noopener">BetrFs</a></td></tr><tr><td><a href="http://esos.hanyang.ac.kr/?page_id=13187" target="_blank" rel="noopener">ESOS</a></td><td style="text-align:center"><a href="http://esos.hanyang.ac.kr/?page_id=13187" target="_blank" rel="noopener">Source</a></td></tr><tr><td><a href="http://www-users.cs.umn.edu/~fan/" target="_blank" rel="noopener">Ziqi Fan</a></td><td style="text-align:center"><a href="https://github.com/ziqifan16" target="_blank" rel="noopener">Source</a></td></tr><tr><td><a href="http://falsifiable.us/pubs/" target="_blank" rel="noopener">Popper</a></td><td style="text-align:center">像devops一样管理科研 支持！<a href="https://github.com/michaelsevilla/malacology-popper" target="_blank" rel="noopener">可编程存储</a></td></tr><tr><td><a href="https://capra.cs.cornell.edu/" target="_blank" rel="noopener">capra</a></td><td style="text-align:center"><a href="https://github.com/cucapra" target="_blank" rel="noopener">Source</a> camera pipeline</td></tr><tr><td><a href="hhttp://lpd.epfl.ch/site/" target="_blank" rel="noopener">DISTRIBUTED COMPUTING LPD</a></td><td style="text-align:center"><a href="https://github.com/LPD-EPFL" target="_blank" rel="noopener">Source</a></td></tr><tr><td><a href="http://datagroup.cs.utah.edu/initialdlab/conference.htm" target="_blank" rel="noopener">initialdlab</a></td><td style="text-align:center"><a href="https://github.com/InitialDLab/" target="_blank" rel="noopener">Source</a> <a href="http://www.cs.utah.edu/~zchang/research.html" target="_blank" rel="noopener">Zhao Chang</a>安全、隐私相关研究</td></tr><tr><td><a href="https://www.systems.ethz.ch/" target="_blank" rel="noopener">SystemGroupETH</a></td><td style="text-align:center">Onur换了个实验室</td></tr><tr><td><a href="https://github.com/CGCL-codes" target="_blank" rel="noopener">CGCL-codes</a></td><td style="text-align:center"><a href="http://grid.hust.edu.cn/" target="_blank" rel="noopener">http://grid.hust.edu.cn/</a> <a href="http://grid.hust.edu.cn/xhshi/" target="_blank" rel="noopener">Xuanhua Shi</a></td></tr><tr><td><a href="http://homepages.inf.ed.ac.uk/pbhatoti/publications.html" target="_blank" rel="noopener">Pramod Bhatotia</a></td><td style="text-align:center"><a href="https://streamapprox.github.io/" target="_blank" rel="noopener">streamapprox</a></td></tr></tbody></table><h2 id="重点关注论文"><a href="#重点关注论文" class="headerlink" title="重点关注论文"></a>重点关注论文</h2><p><a href="http://www.cs.cqu.edu.cn/info/1139/1297.htm" target="_blank" rel="noopener">石亮</a><br><a href="https://www.ecse.rpi.edu/homepages/tzhang/" target="_blank" rel="noopener">Zhang Tong</a><br><a href="http://nucsrl.coe.neu.edu/?q=yangzhengyu" target="_blank" rel="noopener">Zhengyu Yang</a> <a href="https://github.com/yangzy1988" target="_blank" rel="noopener">github</a><br><a href="https://csyhua.github.io/csyhua/index.html" target="_blank" rel="noopener">Yu Hua</a> <a href="http://grid.hust.edu.cn/fmliu/" target="_blank" rel="noopener">Fangming Liu</a> <a href="https://github.com/syy804123097" target="_blank" rel="noopener">github1</a> <a href="https://github.com/Pfzuo" target="_blank" rel="noopener">github2</a><br><a href="http://www.ccs.neu.edu/home/pjd/" target="_blank" rel="noopener">Peter Desnoyers</a> 极其nice的导师，指导很耐心！<br><a href="http://www.csc.lsu.edu/~fchen/" target="_blank" rel="noopener">Feng Chen</a><br><a href="http://cs.njit.edu/~borcea/" target="_blank" rel="noopener">Cristian Borcea</a> Mobile, interesting!<br><a href="https://sites.google.com/site/oslabcbnu/research" target="_blank" rel="noopener">Korea Group</a><br><a href="http://win.uantwerpen.be/~vanhoudt/" target="_blank" rel="noopener">Benny Van Houdt</a> 偏数学，偏理论<br><a href="http://storage.cs.tsinghua.edu.cn/~lu/" target="_blank" rel="noopener">Youyou Lu</a> file system <a href="https://github.com/thustorage/octopus" target="_blank" rel="noopener">octopus</a><br><a href="http://stratos.seas.harvard.edu/publications" target="_blank" rel="noopener">Havard SEAS</a><br><a href="http://pages.cs.wisc.edu/~nitina/" target="_blank" rel="noopener">nitin agrawal</a> <a href="https://github.com/SimbaService/Simba" target="_blank" rel="noopener">github_simba</a> Design Tradeoffs for SSD Performance<br><a href="https://people.engr.ncsu.edu/htseng3/cv.html#publications" target="_blank" rel="noopener">Hung-Wei Tseng</a><br><a href="http://cs.hust.edu.cn/info/1075/1085.htm" target="_blank" rel="noopener">吴非</a><br><a href="http://camelab.org/pmwiki.php" target="_blank" rel="noopener">camelab</a> hios<br><a href="https://www.cc.gatech.edu/~jhuang95/" target="_blank" rel="noopener">jian huang</a><br><a href="http://iacoma.cs.uiuc.edu/index.html" target="_blank" rel="noopener">i-acoma</a><br><a href="http://web.engr.oregonstate.edu/~chenliz/" target="_blank" rel="noopener">Lizhong Chen</a><br><a href="https://gunjae.wordpress.com/about/publications/" target="_blank" rel="noopener">Gunjae Koo</a> <a href="https://github.com/USC-sciplab/Summarizer" target="_blank" rel="noopener">Summarizer: near data processing framework</a><br><a href="http://www.ssrg.ece.vt.edu/~sanghoon/" target="_blank" rel="noopener">SANG-HOON KIM</a><br><a href="https://www.cs.cmu.edu/~yixinluo/" target="_blank" rel="noopener">yixinluo</a><br><a href="https://users.soe.ucsc.edu/~jzhao/index.html" target="_blank" rel="noopener">Jishen Zhao</a><br><a href="https://www.cs.cornell.edu/~asampson/" target="_blank" rel="noopener">asampson</a><br><a href="http://astl.xmu.edu.cn/publications.html" target="_blank" rel="noopener">ASTL</a></p><h2 id="重点关注会议"><a href="#重点关注会议" class="headerlink" title="重点关注会议"></a>重点关注会议</h2><p>FAST, MSST, DATE, HotStorage, DAC, ICCD, ASP-DAC, NVMSA, ATC(a lot of source codes), Codes+ISSS</p><h2 id="重点关注期刊"><a href="#重点关注期刊" class="headerlink" title="重点关注期刊"></a>重点关注期刊</h2><p>TOS, VLSI, JSA, TPDS, TECS, TCAD, IEEE ACCESS, Future Generation Computer Systems</p><h2 id="Tools"><a href="#Tools" class="headerlink" title="Tools"></a>Tools</h2><p><a href="http://nvsl.ucsd.edu/index.php?path=projects/nvmdb" target="_blank" rel="noopener">The Non-Volatile Memory Technology Database (NVMDB)</a></p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;定期查看个人、实验室主页，可以追踪最新的论文、研究方向以及源码，提高科研效率。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="ssd" scheme="http://theopengroup.github.io/categories/ssd/"/>
    
    
  </entry>
  
  <entry>
    <title>如何在多台Linux服务器间自动远程执行各种命令</title>
    <link href="http://theopengroup.github.io/2015/11/09/how-to-execute-remote-shell/"/>
    <id>http://theopengroup.github.io/2015/11/09/how-to-execute-remote-shell/</id>
    <published>2015-11-09T02:55:36.000Z</published>
    <updated>2018-07-13T15:59:11.518Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>应用分布在多台服务器上在带来高可用性的同时，也给软件开发测试人员带来了些许难题，根据错误分析日志、执行脚本等操作往往需要依次登录各个服务器才能完成，如果能够在自己的开发环境上自动登录多台服务器并执行命令或脚本、上传下载文件，将会提高工作效率。</p></blockquote><a id="more"></a><h2 id="Linux开发者"><a href="#Linux开发者" class="headerlink" title="Linux开发者"></a>Linux开发者</h2><p>利用expect脚本实现自动地和交互式任务进行通信</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#告诉操作系统脚本里的代码使用哪一个shell来执行</span></span><br><span class="line"><span class="comment">#!/usr/bin/expect -f </span></span><br><span class="line"><span class="built_in">set</span> port 22</span><br><span class="line"><span class="built_in">set</span> user root</span><br><span class="line"><span class="built_in">set</span> host 192.168.28.30</span><br><span class="line"><span class="built_in">set</span> password root</span><br><span class="line"></span><br><span class="line"><span class="comment">#设置超时时间，单位秒  </span></span><br><span class="line"><span class="built_in">set</span> timeout -1 </span><br><span class="line"><span class="comment">#spawn是进入expect环境后才可以执行的expect内部命令                        </span></span><br><span class="line">spawn ssh -D <span class="variable">$port</span> <span class="variable">$user</span>@<span class="variable">$host</span> <span class="string">"ifconfig"</span> </span><br><span class="line"><span class="comment">#根据提示自动发送yes和密码 </span></span><br><span class="line">expect &#123;                                   </span><br><span class="line"><span class="string">"*yes/no"</span> &#123; send <span class="string">"yes\r"</span>; exp_continue&#125;</span><br><span class="line"><span class="string">"*password:"</span> &#123; send <span class="string">"<span class="variable">$password</span>\r"</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">expect <span class="string">"*#*"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#远程执行命令</span></span><br><span class="line">send <span class="string">"ifconfig &gt; /home/cfg \r"</span>             </span><br><span class="line">send <span class="string">"exit\r"</span></span><br><span class="line">interact</span><br><span class="line">spawn scp <span class="variable">$host</span>:/home/cfg ./</span><br><span class="line">expect &#123;</span><br><span class="line"><span class="string">"*yes/no"</span> &#123; send <span class="string">"yes\r"</span>; exp_continue&#125;</span><br><span class="line"><span class="string">"*assword:"</span> &#123; send <span class="string">"<span class="variable">$password</span>\r"</span> &#125;</span><br><span class="line">&#125;</span><br><span class="line">expect eof</span><br></pre></td></tr></table></figure><h2 id="Java开发者"><a href="#Java开发者" class="headerlink" title="Java开发者"></a>Java开发者</h2><p>使用基于Java的远程执行类库<a href="http://www.ibm.com/developerworks/cn/linux/1412_baoxh_java/index.html" target="_blank" rel="noopener">SSHxcute</a> </p><blockquote><p>貌似只能发送一次命令，所以可以用&amp;&amp;把几条命令连接起来。</p></blockquote><h2 id="Python开发者"><a href="#Python开发者" class="headerlink" title="Python开发者"></a>Python开发者</h2><p><a href="http://pythonpeixun.blog.51cto.com/7195558/1213929" target="_blank" rel="noopener">paramiko</a>是用python语言写的一个模块，遵循SSH2协议，支持以加密和认证的方式，进行远程服务器的连接。<br>使用paramiko可以很好的解决以下问题：1、使用windows客户端；2、远程连接到Linux服务器，查看上面的日志状态，批量配置远程服务器，文件上传，文件下载等。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;应用分布在多台服务器上在带来高可用性的同时，也给软件开发测试人员带来了些许难题，根据错误分析日志、执行脚本等操作往往需要依次登录各个服务器才能完成，如果能够在自己的开发环境上自动登录多台服务器并执行命令或脚本、上传下载文件，将会提高工作效率。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Shell" scheme="http://theopengroup.github.io/categories/Shell/"/>
    
    
  </entry>
  
  <entry>
    <title>Research Statement怎么写？</title>
    <link href="http://theopengroup.github.io/2015/11/02/how-to-write-research-statement/"/>
    <id>http://theopengroup.github.io/2015/11/02/how-to-write-research-statement/</id>
    <published>2015-11-02T05:49:32.000Z</published>
    <updated>2018-07-13T15:59:11.518Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>申请学校时，教授通常会要求先提交一份research statement，以此来考察对方的语言功底，以及研究兴趣、思路是否和自己的实验室很匹配。（tips：去看一看所申请的教授的个人主页，说不定他就有自己的research statement，可以参考着写）</p></blockquote><a id="more"></a><h2 id="Research-Overview"><a href="#Research-Overview" class="headerlink" title="Research Overview"></a>Research Overview</h2><p>总体介绍自己参与过的研究方向，感兴趣的技术等。(篇幅无所谓)</p><blockquote><p>My primary research interests lie in machine learning and bioinformatics. Machine learning is an area of computer science that studies and develops methods for identifying and exploiting interesting regularities in data. Bioinformatics is the field that develops computational methods for attacking problems in biological domains. I am particularly interested in systems that learn from complex and diverse data sources. There is a strong need for such systems since technological advances have led to increases in the types and amounts of digital data while automated methods for the challenging problem of extracting knowledge from these data have lagged. In addition to the proliferation of digital text, audio, and images, high-throughput technologies in biology, medicine and other fields generate large amounts of data that are not amenable to manual analysis. Since these technologies often provide first-of-their-kind glimpses into fundamental processes, there is a keen interest in computational methods for interpretation of the resulting data.</p></blockquote><blockquote><p>I have a special interest in applications of probabilistic methods to bioinformatics problems. My interest in bioinformatics stems from two sources. First, bioinformatics problems have qualities that make them wellsuited for the study of machine learning and to the application of probabilistic methods. These characteristics include inherent uncertainty, complex dependencies, diverse evidence sources, and the availability of labeled training data and domain knowledge. Second, bioinformatics problems typically involve challenging and often fundamental open issues in biology and medicine, and working towards solving them is both gratifying and substantial.</p></blockquote><blockquote><p>My research to date reflects these cross-disciplinary interests. Its unifying theme concerns the development of machine learning methods for prediction of biologically important elements. The style of my research is to push the state of the art in learning algorithms by working on hard computational problems in biology. My research has made both biological and computational contributions. In biology, my predictions have been used by researchers around the world. In computer science, my models and algorithms have proved to be of broad interest and have been published in leading conferences and journals.</p></blockquote><h2 id="Research-to-Date"><a href="#Research-to-Date" class="headerlink" title="Research to Date"></a>Research to Date</h2><p>这里介绍自己的研究经历，如果接触过多个不同方向的项目，可以分段分别来介绍。对于自己发表过论文的项目，需要简要介绍背景意义和成果。tips：可以添加引用，并在statement最后加上reference参考文献，这样可以体现自己所发表论文的level。</p><blockquote><p><strong>Bioinformatics Contributions:</strong> The focus of my doctoral research is on developing methods for the prediction of key DNA sequence elements involved in the process of transcription in bacteria. Since genes are frequently “turned on” and “turned off” at the level of transcription, knowledge of these elements is useful to the study of gene regulation. Indeed, my predictions for the widely studied E. coli genome have been used by researchers in this area. Additionally, my predictions provide insight into the function of genes and the evolutionary relationships among organisms. The basic task I address is the following: starting with example instances of various types of elements, first use machine learning methods to induce models that capture important characteristics of the training instances, then apply these models to predictively identify elements within sequences of interest. </p></blockquote><blockquote><p>The primary contribution in this area has been the development of a model to predict the transcription units of a bacterial genome. My approach has several advantages relative to related work: (i) it predicts the complete extent of transcription units, (ii) it makes genome-wide predictions for multiple types of elements while enforcing a consistency among all predictions, and (iii) it simultaneously considers multiple sources of evidence. This research makes me well positioned to make further advances in bioinformatics. In particular, I believe methods that coherently combine data from many different sources will become more important as more high-throughput technologies for interrogating the states of cells emerge.</p></blockquote><blockquote><p><strong>Contributions II:</strong> ……</p></blockquote><h2 id="Future-Research-Directions"><a href="#Future-Research-Directions" class="headerlink" title="Future Research Directions"></a>Future Research Directions</h2><p>对未来方向迷茫怎么办？写出来没深度怎么办？不用急，找几篇自己领域感兴趣的论文，他们的future work就是你未来研究的方向。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;申请学校时，教授通常会要求先提交一份research statement，以此来考察对方的语言功底，以及研究兴趣、思路是否和自己的实验室很匹配。（tips：去看一看所申请的教授的个人主页，说不定他就有自己的research statement，可以参考着写）&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="科研" scheme="http://theopengroup.github.io/categories/%E7%A7%91%E7%A0%94/"/>
    
    
  </entry>
  
</feed>
